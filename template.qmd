---
title: "Final Project Report"
author: "Anna Delesalle (ajd16) & Owen Jin"
jupyter: julia-1.10
date: 2024-04-30

# YOU DO NOT NEED BOTH PDF AND DOCX.
# COMMENT OR DELETE THE ONE YOU DON'T WANT TO USE.
#
# Feel free to customize the look of your final document:
# https://quarto.org/docs/reference/formats/pdf.html
# https://quarto.org/docs/reference/formats/docx.html

format: 
    pdf:
        documentclass: article
        fontsize: 11pt
        geometry:
            - margin=1in  
        number-sections: true
        code-line-numbers: true
    # docx: 
    #    toc: true
    #    fig-format: png
    #    number-sections: true
    #    code-line-numbers: true

date-format: "ddd., MMM. D"

# See Quarto docs: https://quarto.org/docs/authoring/footnotes-and-citations.html
# you can export your references from Zotero, EndNote, or other reference managers
# from Zotero you'll need https://retorque.re/zotero-better-bibtex/
references: references.bib

# recommended, but not required
# you will need jupyter-cache installed
execute: 
  cache: true
---

# Introduction

## Problem Statement

### Clearly define the problem statement that your chosen feature aims to address.
### Explain the significance of this problem in the context of climate risk management.


Elevating a house is very costly and is the reason why this decision is put off into the future. With the help of grants, buildings are able to be elevated as needed in a proactive timeframe which prevents further damages.

Federal grants have been a crucial form of assistance for households living in areas prone to flooding, but there is lacking research into how these grants impact the cost-benefit ratio and how these funds are allocated.

After demonstrating the significance of an elevation construction grant to a homeowner or community, we found that these grants are more often allocated for wealthier homes/businesses. Many of these programs are required to go through larger communities before getting allotted to individuals which makes it even harder for marginalized communities/families to receive this form of funding.

## Selected Feature

Describe the feature you have selected to add to the existing decision-support tool.
Discuss how this feature relates to the problem statement and its potential to improve climate risk assessment.

Adding the grant as a percentage (75%) to the initial construction_cost in the first year for the FEMA FMA grant. 
Modify the state of the world (ex: subsidy parameter)
Compare this for different house scenarios


For the post-flood damage grants, we could reduce the damage amount by 75% for the year with the most severe year of the 50 in terms of storms.
Assume that if the house was flooded it's a major flood event 
Split construction cost into construction cost for the homeowner vs. government 
Potentially create a variable that is like 
Compare npv for homeowner and government (who spends more)


# Literature Review

Provide a brief overview of the theoretical background related to your chosen feature.
Cite at least two relevant journal articles to support your approach (see [Quarto docs](https://quarto.org/docs/authoring/footnotes-and-citations.html) for help with citations).
Explain how these articles contribute to the justification of your selected feature.

# Methodology
```{julia}
using CSV
using DataFrames
using DataFramesMeta
using Distributions
using LaTeXStrings
using Metaheuristics
using Plots
using Random
using Unitful

Plots.default(; margin=5Plots.mm)
```

```{julia}
using Revise
using HouseElevation
```

```{julia}
#| output: false
house = let
    haz_fl_dept = CSV.read("data/haz_fl_dept.csv", DataFrame) # read in the file
    desc = "one story, no basement, Contents"
    row = @rsubset(haz_fl_dept, :Source == "USACE - Galveston", :Description == desc)[1, :] # select the row I want
    area = 500u"ft^2"
    height_above_gauge = 10u"ft"
    House(row; area=area, height_above_gauge=height_above_gauge, value_usd=500_000)
end

p = ModelParams(; house=house, years=2024:2083)
```

```{julia}
#| output: false
slr_scenarios = let
    df = CSV.read("data/slr_oddo.csv", DataFrame)
    [Oddo17SLR(a, b, c, tstar, cstar) for (a, b, c, tstar, cstar) in eachrow(df)]
end

function draw_surge_distribution()
    μ = rand(Normal(5, 1))
    σ = rand(Exponential(1.25))
    ξ = rand(Normal(0.1, 0.05))
    return GeneralizedExtremeValue(μ, σ, ξ)
end

function draw_discount_rate()
    return rand(Normal(0.05, 0.03))
end

function draw_damages_grant()
    rand([.75,.75,.75,.75,.9])
end

function GrantDistribution()
    rand([.5,.75,.75,.75,.9])
end

function draw_sow()
    slr = rand(slr_scenarios)
    surge_params = draw_surge_distribution()
    discount = draw_discount_rate()
    grant = GrantDistribution()
    damages_grant = draw_damages_grant()
    return SOW(slr, surge_params, discount, grant, damages_grant)
end

```

```{julia}
#| output: false
Random.seed!(421521)
N_SOW = 10_000
N_SOW_opt = 10 # to start
sows = [draw_sow() for _ in 1:N_SOW]
sows_opt = first(sows, N_SOW_opt)
```

```{julia}
bounds = boxconstraints(; lb=[0.0], ub=[14.0])
```

```{julia}
function objective_function(Δh::Vector{Float64})
    a = Action(Δh[1])
    npvs = [run_sim(a, sow, p) for sow in sows_opt]
    return -mean(npvs)
end
```

```{julia}
result = optimize(objective_function, bounds)
```

```{julia}
minimum(result)
```

```{julia}
minimizer(result)
```

```{julia}
N_SOW_opt = 100
sows_opt = first(sows, N_SOW_opt)
```

```{julia}
options = Options(; time_limit=180.0, f_tol_rel=10.0)
```

```{julia}
algorithm = ECA(; options=options)
```

```{julia}
Random.seed!(421521)
result = optimize(objective_function, bounds, algorithm)
```

```{julia}
display(minimum(result))
display(minimizer(result))
```


## Implementation

You should make your modifications in either the `HouseElevation` or `ParkingGarage` module.
Detail the steps taken to implement the selected feature and integrate it into the decision-support tool.
Include code snippets and explanations where necessary to clarify the implementation process.

We included two additional elements in SOW
struct SOW{T<:Real, E<:Real, S<:Real}
    slr::Oddo17SLR # the parameters of sea-level rise
    surge_dist::Distributions.UnivariateDistribution # the distribution of storm surge
    discount_rate::T # the discount rate, as a percentage (e.g., 2% is 0.02)
    grant::E # The grant amount as a percentage of what the government will pay for the elevation.
    damages_grant::S # The grant amount as a percentage of what the government will pay for the damages.
end

In the run_sim function, construction_cost will now account for the potential grant
function run_sim(a::Action, sow::SOW, p::ModelParams)
    construction_cost = elevation_cost(p.house, a.Δh_ft, sow.grant)


## Validation

As we have seen in labs, mistakes are inevitable and can lead to misleading results.
To minimize the risk of errors making their way into final results, it is essential to validate the implemented feature.
Describe the validation techniques used to ensure the accuracy and reliability of your implemented feature.
Discuss any challenges faced during the validation process and how they were addressed.

```{julia}
#| output: false
elevations_try = 0:0.5:14
actions_try = Action.(elevations_try)

N_more = 500
npvs_opt = [mean([run_sim(a, sow, p) for sow in sows_opt]) for a in actions_try]
npvs_moore = [
    mean([run_sim(a, sow, p) for sow in first(sows, N_more)]) for a in actions_try
]
```

```{julia}
plot(
    elevations_try,
    npvs_opt ./ 1000;
    xlabel="Elevation [ft]",
    ylabel="NPV [1000 USD]",
    label="First $(N_SOW_opt) SOWs",
    marker=:circle,
)
plot!(elevations_try, npvs_moore ./ 1000; label="First $(N_more) SOWs", marker=:circle)
vline!([minimizer(result)]; label="Optimal", linestyle=:dash)
```

# Results

Present the results obtained from the enhanced decision-support tool.
Use tables, figures, and visualizations to clearly communicate the outcomes.
Provide sufficient detail to demonstrate how the implemented feature addresses the problem statement.
Use the `#| output: false` and/or `#| echo: false` tags to hide code output and code cells in the final report except where showing the output (e.g.g, a plot) or the code (e.g., how you are sampling SOWs) adds value to the discussion.
You may have multiple subsections of results, which you can create using `##`.

# Conclusions

## Discussion

Analyze the implications of your results for climate risk management.
Consider the context of the class themes and discuss how your findings contribute to the understanding of climate risk assessment.
Identify any limitations of your approach and suggest potential improvements for future work.

## Conclusions

Summarize the key findings of your project and reiterate the significance of your implemented feature in addressing the problem statement.
Discuss the broader implications of your work for climate risk management and the potential for further research in this area.

# References

:::{#refs}
:::